#include <QApplication>
#include "acckeythread.h"
#ifdef WIN32
#include <windows.h>
#endif

int caredVKeys[] = {
0x08,0x09,0x0D,0x10,0x11,0x12,0x13,0x1B,0x20,0x21,0x22,0x23,0x24,0x25,0x26,
0x27,0x28,0x2C,0x2D,0x2E,0x30,0x31,0x32,0x33,0x34,0x35,0x36,0x37,0x38,0x39,
0x41,0x42,0x43,0x44,0x45,0x46,0x47,0x48,0x49,0x4A,0x4B,0x4C,0x4D,0x4E,0x4F,
0x50,0x51,0x52,0x53,0x54,0x55,0x56,0x57,0x58,0x59,0x5A,0x60,0x61,0x62,0x63,
0x64,0x65,0x66,0x67,0x68,0x69,0x6A,0x6B,0x6D,0x6E,0x6F,0x70,0x71,0x72,0x73,
0x74,0x75,0x76,0x77,0x78,0x79,0x7A,0x7B,0x7C,0x7D,0x7E,0x7F,0x80,0x81,0x82,
0x83,0x84,0x85,0x86,0x87,0xBA,0xBB,0xBC,0xBD,0xBE,0xBF,0xC0,0xDB,0xDC,0xDD,
0xDE,0 };

AccKeyThread::AccKeyThread(uint interval)
    :m_stop(true),m_interval(interval),m_caredKeys(COUNT_VK)
{
    for (int i = 0; caredVKeys[i] != 0;i ++)
    {
        m_caredKeys[caredVKeys[i]] = true;
    }

    start();
}

AccKeyThread::~AccKeyThread(void)
{
    m_stop = true;
    this->wait();
}

AccKeyThread * AccKeyThread::inst()
{
    static AccKeyThread inst;
    return &inst;
}

void AccKeyThread::run()
{
    m_stop = false;
    QBitArray state(COUNT_VK);

    while(!m_stop)
    {
        if(QApplication::activeWindow() != 0)
        {
            bool stateChanged = false;
            for (int i = 0;i < COUNT_VK;i ++)
            {
                if (m_caredKeys[i])
                {
                    bool isPressed = false;
#ifdef WIN32
                    isPressed = GetKeyState(i) < 0;
#endif

                    {
                        stateChanged = true;
                        state[i] = isPressed;
                    }
                }
            }
            if (stateChanged)
            {
                emit accKeyPressed(AccKeys(state));
            }
        }
        msleep(m_interval);
    }
}

void AccKeyThread::stop()
{
    m_stop = true;
}
